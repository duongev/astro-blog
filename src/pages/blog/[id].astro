---
import { getFirestore } from "firebase-admin/firestore";
import MainLayout from "../../layouts/MainLayout.astro";
import {app} from "../../firebase/server";
import { Code } from 'astro:components';

interface Post {
    title: string;
    content: string;
    createAt: any;
}

const { id } = Astro.params;

if (!id) {
    return Astro.redirect("/404");
}

const db = getFirestore(app);
const postsRef = db.collection("posts");
const postSnapshot = await postsRef.doc(id).get();

if (!postSnapshot.exists) {
    return Astro.redirect("/404");
}

const post = postSnapshot.data() as Post;

const splitString = "|\|\|\|"
const arrCode: { value: string; lang: any }[] = [];

function removeTags(content: string) {
    const regexTags = new RegExp(/<p>(.*?)(<\/p>)/, 'ig');
    return content.replace(regexTags, function (_string, value: string) {
        return value.replaceAll('&lt;', '<').replaceAll('&gt;', '>').replaceAll('&nbsp;', '  ') + '\n'
    })
}

const searchRegex = new RegExp(/\[code(.*?)](.*?)\[\/code]/, 'ig');
const filterContent = post.content.replace(searchRegex, function (string) {
    const lang = string.match(/(^(?!.*lang=")|(?<=lang=")).*?((?=")|$)/);
    const value = string.match(/\[code [^>]+](.*?)\[\/code]/);
    arrCode.push({
        value: value ? removeTags(value[1]?.slice(4).slice(0, -3)) : '',
        lang: lang ? lang[0] : 'ts'
    })

    return splitString;
}).replaceAll(`<p>${splitString}</p>`, splitString);

const newContent = filterContent.split(splitString);
---

<MainLayout title={post.title}>
    <div class="container">
        <h1>{post.title}</h1>
        {
            newContent.map((el, index) => {
                return (
                    <>
                        <Fragment set:html={el} />
                        {arrCode[index] ? <Code theme="dark-plus" style="padding: 0.25rem 1rem" code={arrCode[index].value || "" } lang={arrCode[index].lang || 'ts'} wrap/> : null}
                    </>
                )
            })
        }

    </div>

</MainLayout>