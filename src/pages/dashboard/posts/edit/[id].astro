---
import { app } from "../../../../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import DashboardLayout from "../../../../layouts/DashboardLayout.astro";
import RichTextEditor from "../../../../components/RichTextEditor.vue"
import Timestamp from "firebase-admin";

import { getAuth } from "firebase-admin/auth";
const auth = getAuth(app);

/* Check current session */
if (!Astro.cookies.has("__session")) {
    return Astro.redirect("/signin");
}
const sessionCookie = Astro.cookies.get("__session").value;
const decodedCookie = await auth.verifySessionCookie(sessionCookie);
const user = await auth.getUser(decodedCookie.uid);

if (!user) {
    return Astro.redirect("/signin");
}

interface Post {
    title: string;
    content: string;
    createAt: Timestamp;
}

const { id } = Astro.params;

if (!id) {
    return Astro.redirect("/404");
}

const db = getFirestore(app);
const postsRef = db.collection("posts");
const postSnapshot = await postsRef.doc(id).get();

if (!postSnapshot.exists) {
    return Astro.redirect("/404");
}

const post = postSnapshot.data() as Post;
---

<DashboardLayout title=`Edit ${post.title}`>
    <div class="container post-form">
        <h1>Edit {post.title}</h1>
        <p>Here you can edit or delete your post's data.</p>
        <form id="editForm" method="post" action={`/api/posts/${id}`}>
            <label for="title">Title</label>
            <input type="text" id="title" name="title" value={post.title} />
            <RichTextEditor post={post} client:only="vue" />
            <footer>
                <button type="submit" class="primary">Save post</button>
                <button type="button" id="delete-document">Delete</button>
            </footer>
        </form>
    </div>
</DashboardLayout>
<script>
    const deleteButton = document.getElementById(
        "delete-document"
    ) as HTMLButtonElement;
    const url = document.querySelector("#editForm")?.getAttribute("action") as string;
    deleteButton.addEventListener("click", async () => {
        const response = await fetch(url, {
            method: "DELETE",
        });
        if (response.redirected) {
            window.location.assign(response.url);
        }
    });
</script>