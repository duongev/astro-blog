---
import { app } from "../../../../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import DashboardLayout from "../../../../layouts/DashboardLayout.astro";

interface Post {
    title: string;
    content: string;
    createAt: Date;
}

const { id } = Astro.params;

if (!id) {
    return Astro.redirect("/404");
}

const db = getFirestore(app);
const postsRef = db.collection("posts");
const postSnapshot = await postsRef.doc(id).get();

if (!postSnapshot.exists) {
    return Astro.redirect("/404");
}

const post = postSnapshot.data() as Post;
---

<DashboardLayout title="Edit {post.name}">
    <div class="container post-form">
        <h1>Edit {post.title}</h1>
        <p>Here you can edit or delete your friend's data.</p>
        <form id="editForm" method="post" action={`/api/posts/${id}`}>
            <label for="title">Title</label>
            <input type="text" id="title" name="title" value={post.title} />
            <label for="content">Content</label>
            <textarea id="content" name="content">{post.content}</textarea>
            <footer>
                <button type="submit" class="primary">Save post</button>
                <button type="button" id="delete-document">Delete</button>
            </footer>
        </form>

    </div>
</DashboardLayout>
<script>
    const deleteButton = document.getElementById(
        "delete-document"
    ) as HTMLButtonElement;
    const url = document.querySelector("#editForm")?.getAttribute("action") as string;
    deleteButton.addEventListener("click", async () => {
        console.log('vao day')
        const response = await fetch(url, {
            method: "DELETE",
        });
        if (response.redirected) {
            window.location.assign(response.url);
        }
    });
</script>